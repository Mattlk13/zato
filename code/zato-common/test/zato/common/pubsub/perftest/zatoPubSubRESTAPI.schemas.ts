/**
 * Automatically generated by @grafana/openapi-to-k6: 0.3.2
 * Do not edit manually.
 * Zato Pub/Sub REST API
 * REST API for Zato's publish/subscribe messaging system.

This API allows clients to:
- Publish messages to topics
- Subscribe to topics to receive messages
- Retrieve messages from subscribed topics
- Unsubscribe from topics

All operations require HTTP Basic Authentication.

 * Service version: 3.3.0
 */
export interface SuccessResponse {
  is_ok: boolean;
  /** Correlation ID for request tracking */
  cid: string;
  status?: string;
}

export type PublishResponseAllOf = {
  /**
   * Unique message identifier
   * @pattern ^zpsm\.[a-z0-9-]+$
   */
  msg_id: string;
};

export type PublishResponse = SuccessResponse & PublishResponseAllOf;

export interface ErrorResponse {
  is_ok: boolean;
  /** Correlation ID for request tracking */
  cid: string;
  /** Error description */
  details: string;
  /** HTTP status description */
  status: string;
}

export interface MessageMetadata {
  /** Topic the message was published to */
  topic_name: string;
  /** Message size in bytes */
  size: number;
  /**
   * Message priority
   * @minimum 0
   * @maximum 9
   */
  priority: number;
  /** Message expiration time in seconds */
  expiration: number;
  /**
   * Unique message identifier
   * @pattern ^zpsm\.[a-z0-9-]+$
   */
  msg_id: string;
  /** Correlation ID for message tracking */
  correl_id?: string;
  /** When the message was published (ISO format with timezone) */
  pub_time_iso: string;
  /** When the message was received by the system (ISO format with timezone) */
  recv_time_iso: string;
  /** When the message will expire (ISO format with timezone) */
  expiration_time_iso?: string;
  /** Time elapsed since message was published (duration format) */
  time_since_pub: string;
  /** Time elapsed since message was received (duration format) */
  time_since_recv: string;
  /** ID of message this is replying to */
  in_reply_to?: string;
  /** External client identifier */
  ext_client_id?: string;
}

export type MessageDataOneOf = { [key: string]: unknown };

/**
 * The actual message content
 */
export type MessageData = string | MessageDataOneOf;

export interface Message {
  /** The actual message content */
  data: MessageData;
  meta: MessageMetadata;
}

export type MessagesListResponseAllOf = {
  /** Array of retrieved messages */
  messages: Message[];
  /** Number of messages returned */
  message_count: number;
};

export type MessagesListResponse = SuccessResponse & MessagesListResponseAllOf;

export type SingleMessageResponseAllOfDataOneOf = { [key: string]: unknown };

/**
 * The actual message content
 */
export type SingleMessageResponseAllOfData =
  | string
  | SingleMessageResponseAllOfDataOneOf;

export type SingleMessageResponseAllOfMetaAllOf = {
  /** Number of messages returned (always 1 for single message response) */
  message_count: number;
};

export type SingleMessageResponseAllOfMeta = MessageMetadata &
  SingleMessageResponseAllOfMetaAllOf;

export type SingleMessageResponseAllOf = {
  /** The actual message content */
  data: SingleMessageResponseAllOfData;
  meta: SingleMessageResponseAllOfMeta;
};

export type SingleMessageResponse = SuccessResponse &
  SingleMessageResponseAllOf;

export type PostPubsubTopicTopicNameBodyDataOneOf = { [key: string]: unknown };

/**
 * The message content
 */
export type PostPubsubTopicTopicNameBodyData =
  | string
  | PostPubsubTopicTopicNameBodyDataOneOf;

export type PostPubsubTopicTopicNameBody = {
  /** The message content */
  data: PostPubsubTopicTopicNameBodyData;
  /**
   * Message priority (0=lowest, 9=highest)
   * @minimum 0
   * @maximum 9
   */
  priority?: number;
  /**
   * Message expiration time in seconds
   * @minimum 1
   */
  expiration?: number;
  /** Correlation ID for message tracking */
  correl_id?: string;
  /** ID of message this is replying to */
  in_reply_to?: string;
  /** External client identifier */
  ext_client_id?: string;
  /** Custom publication time (ISO format with timezone) */
  pub_time?: string;
};

export type PostPubsubMessagesGetBody = {
  /**
   * Maximum number of messages to retrieve
   * @minimum 0
   * @maximum 1000
   */
  max_messages?: number;
  /**
   * Maximum total length of message data in bytes
   * @minimum 0
   * @maximum 5000000
   */
  max_len?: number;
};

export type PostPubsubMessagesGet200 =
  | MessagesListResponse
  | SingleMessageResponse;
