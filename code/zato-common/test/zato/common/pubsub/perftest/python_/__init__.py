# -*- coding: utf-8 -*-

"""
Copyright (C) 2025, Zato Source s.r.o. https://zato.io

Licensed under AGPLv3, see LICENSE.txt for terms and conditions.
"""

# gevent
from gevent import spawn

# ################################################################################################################################
# ################################################################################################################################

if 0:
    pass

# ################################################################################################################################
# ################################################################################################################################

class Invoker:
    """ Placeholder class for Invoker instances.
    """
    def __init__(self) -> 'None':
        pass

# ################################################################################################################################

    def start(self) -> 'None':
        """ Start the invoker.
        """
        pass

# ################################################################################################################################
# ################################################################################################################################

class InvokerManager:
    """ Creates new instances of Invoker class in greenlets.
    """

    def start_invoker(self) -> 'None':
        """ Creates a new Invoker instance in a greenlet.
        """
        invoker = Invoker()
        _ = spawn(invoker.start)

# ################################################################################################################################
# ################################################################################################################################

if __name__ == '__main__':

    # stdlib
    import argparse

    parser = argparse.ArgumentParser(description='Invoker Manager')
    _ = parser.add_argument('--num-invokers', type=int, default=1, help='Number of invokers to start')
    args = parser.parse_args()

    manager = InvokerManager()

    for _ in range(args.num_invokers):
        _ = manager.start_invoker()

# ################################################################################################################################
# ################################################################################################################################
