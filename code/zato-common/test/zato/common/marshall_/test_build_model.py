# -*- coding: utf-8 -*-

"""
Copyright (C) 2023, Zato Source s.r.o. https://zato.io

Licensed under LGPLv3, see LICENSE.txt for terms and conditions.
"""

# Zato
from zato.common.marshal_.api import Model
from zato.common.test import BaseSIOTestCase
from zato.common.typing_ import cast_

# ################################################################################################################################
# ################################################################################################################################

if 0:
    from zato.server.base.parallel import ParallelServer

# ################################################################################################################################
# ################################################################################################################################

class BuildModelTestCase(BaseSIOTestCase):

    def xtest_build_from_string(self):

        name = 'Test_Build_From_String'
        input = 'abc'

        server = cast_('ParallelServer', None)

        model = Model.build_model_from_flat_input(server, name, input)
        model

# ################################################################################################################################

    def xtest_build_from_list(self):

        name = 'Test_Build_From_List'
        input = ['id', 'name', 'user_id, is_active']

# ################################################################################################################################

    def xtest_build_from_tuple(self):

        name = 'Test_Build_From_List'
        input = ('id', 'name', 'user_id, is_active')

# ################################################################################################################################
# ################################################################################################################################

if __name__ == '__main__':
    _ = main()

# ################################################################################################################################
# ################################################################################################################################
